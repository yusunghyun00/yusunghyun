index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Typing game</title>
    <link rel="stylesheet" href="ccs/sstyle.css"></link>
</head>
<body>
    <div class="header">
        <h1>타이핑마스터!</h1>
    </div>
    <div class="word-display">
        Hello
    </div>
    <div class="word-input-box">
        <input type="text" class="word-input">
    </div>
    <div class="game-info">
        <div>
            남은시간: <span class="time">0</span>초
        </div>
        <div>
            획득점수: <span class="score">0</span>점
        </div>
    </div>
    <button class="button loading" onclick="run()">게임을 불러오는중...</button>
    <script src="js/mmain.js"></script>
</body>

</html>'
main.js
const GAME_TIME = 9;
        let score = 0;
        let time = GAME_TIME;
        let isplaying = false;
        let timeInterval;
        let words = [];
        let checkInterval;
        
        const wordInput = document.querySelector('.word-input');
        const wordDisplay =document.querySelector('.word-display');
        const scoreDisplay = document.querySelector('.score');
        const timeDisplay = document.querySelector('.time');
        const button =  document.querySelector('.button');

        init();

        function init(){
            getWords();
            wordInput.addEventListener('input', checkMatch)
        }

        // 게임이 실행 
        function run(){
            isplaying = true;
            time = GAME_TIME;
            wordInput.focus();
            scoreDisplay.innerText = 0;
            timeInterval = setInterval(countDowm, 1000);
            checkInterval = setInterval(checkStatus, 50);
            buttonChange('게임중')
        }


        function checkStatus(){
            if(!isPlaying && time === 0) {
                buttonChange("게임시작")
                clearInterval(checkInterval)
            }
        }

        // 단어불러오기
        function getWords(){
            words = ['Hello', 'Banana', 'Apple', 'Cherry'];
            buttonChange("게임시작")
        }

        // 단어일치 체크
        function checkMatch (){
            if(wordInput.value.toLowerCase() === wordDisplay.innerText.toLowerCase()){
                wordInput.value = "";
                if(!isPlaying){
                    return;
                }
                score++;
                scoreDisplay.innerText = score; 
                time = GAME_TIME;
                const randomIndex = Math.floor(Math.random() * words.length);
                wordDisplay.innerText = words[randomIndex];
            };           
                
        }       
        
        function countDowm(){
            //(조건) ? 참일경우 : 거짓일 경우
            time > 0 ? time-- : isPlaying = false;
            if(!isplaying){
                clearInterval(timeInterval)
            }
            timeDisplay.innerText = time;
        }

        function buttonChange(text){
            button.innerText = text;
            text === "게임시작" ? button.classList.remove('loading') :  button.classList.add('loading');
        }
        style.css
        *{
    margin: 0;
    padding: 0;
}

body{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.header{
    width: 100%;
    background-color: #3b5999;
    color: #fff;
    text-align: center;
    padding: 1rem;
}

.word-display{
    margin: 0.5rem;
    font-size: 80px;
    color: #3b5999;
}
.word-input-box{
    margin-top: 2rem;
}
.word-input{
    padding: 0.5rem;
    width: 300px;
}
.game-info{
    margin-top: 2rem;
    font-size: 1rem;
    display: flex;
    justify-content: space-between;
    width: 200px;
}

.time, .score{
    font-size: 30px;
    justify-content: space-between;
}
.button{
    width: 200px;
    height: 35px;
    background-color: #ccc;
    color: #fff;
    border: none;
    margin-top: 3rem;
    cursor: pointer;
}
.loading{
    columns: #3b5999;
    cursor: not-allowed;
}
